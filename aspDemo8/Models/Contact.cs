// Demo 8 - Complete Application; LV
// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

namespace Demo8.Models;

[Table("Contact")]
public partial class Contact
{
    [Key]
    public int ContactPK { get; set; }

    [Required]
    [StringLength(20)]
    [Display(Name = "First Name")]
    [RegularExpression(@"^[a-zA-Z]+$", ErrorMessage = "Upper and lower case letters")]
    public string FirstName { get; set; }

    [Required]
    [StringLength(20)]
    [Display(Name = "Last Name")]
    [RegularExpression(@"^[a-zA-Z]+$", ErrorMessage = "Upper and lower case letters")]
    public string LastName { get; set; }

    [StringLength(30)]
    [Display(Name = "Address")]
    [RegularExpression(@"^[a-zA-Z0-9][\w\s\.]*[a-zA-Z0-9\.]$", ErrorMessage = "Invalid characters")]
    public string Address { get; set; }

    [StringLength(30)]
    [Display(Name = "City")]
    [RegularExpression(@"^[a-zA-Z][a-zA-Z\s]*[a-zA-Z]$", ErrorMessage = "Invalid characters")]
    public string City { get; set; }

    [StringLength(2)]
    [Display(Name = "State")]
    [RegularExpression(@"^[a-zA-Z]{2}$", ErrorMessage = "Please enter a valid state abbreviation")]
    public string State { get; set; }

    [StringLength(10)]
    [Display(Name = "Postal Code")]
    [DataType(DataType.PostalCode)]
    [RegularExpression(@"^\d{5}(-\d{4})?$", ErrorMessage = "Please enter a valid 5 or 9 digit zip code")]
    public string Zip { get; set; }

    [StringLength(20)]
    [Display(Name = "Country")]
    [RegularExpression(@"^[a-zA-Z][a-zA-Z\s]*[a-zA-Z]$", ErrorMessage = "Invalid characters")]
    public string Country { get; set; }

    [StringLength(30)]
    [DataType(DataType.EmailAddress)]
    [Display(Name = "Email")]
    [RegularExpression(@"^([\w-\.]+)@([\w]+)\.([a-zA-Z]{2,4})$", ErrorMessage = "Please enter a valid email")]
    public string Email { get; set; }

    [StringLength(12)]
    [DataType(DataType.PhoneNumber)]
    [Display(Name = "Phone")]
    [RegularExpression(@"^(\d{3}-)?\d{3}-\d{4}$", ErrorMessage = "Please enter a valid phone mumber")]
    public string Phone { get; set; }

    [StringLength(20)]
    [Required(ErrorMessage = "Please enter a username")]
    [Display(Name = "Username")]
    [RegularExpression(@"^[a-zA-Z]+$", ErrorMessage = "Upper and lower case letters")]
    public string UserLogin { get; set; }

    [StringLength(20)]
    [Required(ErrorMessage = "Please enter a password")]
    [Display(Name = "Password")]
    [UIHint("password")]
    [RegularExpression(@"^[a-zA-Z0-9\*\$]+$", ErrorMessage = "Letters, digits, *, $")]
    public string UserPassword { get; set; }

    public bool? MailingList { get; set; }

    public int UserRoleFK { get; set; }

    [InverseProperty("ContactFKNavigation")]
    public virtual ICollection<FilmReview> FilmReviews { get; set; } = new List<FilmReview>();

    [ForeignKey("UserRoleFK")]
    [InverseProperty("Contacts")]
    public virtual UserRole UserRoleFKNavigation { get; set; }
}